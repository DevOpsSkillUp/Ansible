- name: Creating ec2 and route-53 records
  hosts: local
  connection: local
  vars:
    Subnet_Id: subnet-0e0394605783eefba
    Securitygroup_Id: sg-021077680fed85f05
    AMI_Id: ami-09c813fb71547fc4f
    Instance_Type: t2.micro
    Zone: devops-project.site
    Instances:
    - mysql
    - backend
    - frontend
  tasks:
  - name: Install the packges
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - boto3
    - botocore


  - name: Create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      subnet_id: "{{ Subnet_Id }}"
      security_group: "{{ Securitygroup_Id }}"
      image_id: "{{ AMI_Id }}"
      instance_type: "{{ Instance_Type }}"
    loop: "{{ Instances }}"
    register: ec2_info

  # - name: print ec2 info
  #   ansible.builtin.debug:
  #     msg : "{{ ec2_info }}"

  # - name: print private IP address
  #   ansible.builtin.debug:
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_info.results }}"

  
  - name: Creating route 53 records with private IP
    amazon.aws.route53:
      state: present
      zone: "{{ Zone }}"
      record: "{{ item.item }}.{{ Zone }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_info.results }}"

  - name: Creating route 53 record for public IP
    amazon.aws.route53:
      state: present
      zone: "{{ Zone }}"
      record: "{{ Zone }}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_info.results }}"
    when: item.item == "frontend"